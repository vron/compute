#pragma once
#include "common.hpp"
#include "mat.hpp"

mat2 always_inline make_mat2(uint32_t v) { mat2 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; return m; };
mat2 always_inline make_mat2(int32_t v) { mat2 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; return m; };
mat2 always_inline make_mat2(float v) { mat2 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; return m; };
mat2 always_inline make_mat2(double v) { mat2 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; return m; };
mat2 always_inline make_mat2(float v0,float v1) { mat2 m; m.c[0][0] = v0; m.c[0][1] = v1; return m; };
mat2 always_inline make_mat2(float v0,float v1,float v2) { mat2 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[1][0] = v2; return m; };
mat2 always_inline make_mat2(float v0,float v1,float v2,float v3) { mat2 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[1][0] = v2; m.c[1][1] = v3; return m; };
mat3 always_inline make_mat3(uint32_t v) { mat3 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; return m; };
mat3 always_inline make_mat3(int32_t v) { mat3 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; return m; };
mat3 always_inline make_mat3(float v) { mat3 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; return m; };
mat3 always_inline make_mat3(double v) { mat3 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; return m; };
mat3 always_inline make_mat3(float v0,float v1) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3,float v4) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; m.c[1][1] = v4; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3,float v4,float v5) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; m.c[1][1] = v4; m.c[1][2] = v5; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3,float v4,float v5,float v6) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; m.c[1][1] = v4; m.c[1][2] = v5; m.c[2][0] = v6; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; m.c[1][1] = v4; m.c[1][2] = v5; m.c[2][0] = v6; m.c[2][1] = v7; return m; };
mat3 always_inline make_mat3(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8) { mat3 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[1][0] = v3; m.c[1][1] = v4; m.c[1][2] = v5; m.c[2][0] = v6; m.c[2][1] = v7; m.c[2][2] = v8; return m; };
mat4 always_inline make_mat4(uint32_t v) { mat4 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[0][3] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[1][3] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; m[2][3] = 0.0;; m[3][0] = 0.0;; m[3][1] = 0.0;; m[3][2] = 0.0;; m[3][3] = (float)v;; return m; };
mat4 always_inline make_mat4(int32_t v) { mat4 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[0][3] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[1][3] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; m[2][3] = 0.0;; m[3][0] = 0.0;; m[3][1] = 0.0;; m[3][2] = 0.0;; m[3][3] = (float)v;; return m; };
mat4 always_inline make_mat4(float v) { mat4 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[0][3] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[1][3] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; m[2][3] = 0.0;; m[3][0] = 0.0;; m[3][1] = 0.0;; m[3][2] = 0.0;; m[3][3] = (float)v;; return m; };
mat4 always_inline make_mat4(double v) { mat4 m; m[0][0] = (float)v;; m[0][1] = 0.0;; m[0][2] = 0.0;; m[0][3] = 0.0;; m[1][0] = 0.0;; m[1][1] = (float)v;; m[1][2] = 0.0;; m[1][3] = 0.0;; m[2][0] = 0.0;; m[2][1] = 0.0;; m[2][2] = (float)v;; m[2][3] = 0.0;; m[3][0] = 0.0;; m[3][1] = 0.0;; m[3][2] = 0.0;; m[3][3] = (float)v;; return m; };
mat4 always_inline make_mat4(float v0,float v1) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10,float v11) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; m.c[2][3] = v11; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10,float v11,float v12) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; m.c[2][3] = v11; m.c[3][0] = v12; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10,float v11,float v12,float v13) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; m.c[2][3] = v11; m.c[3][0] = v12; m.c[3][1] = v13; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10,float v11,float v12,float v13,float v14) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; m.c[2][3] = v11; m.c[3][0] = v12; m.c[3][1] = v13; m.c[3][2] = v14; return m; };
mat4 always_inline make_mat4(float v0,float v1,float v2,float v3,float v4,float v5,float v6,float v7,float v8,float v9,float v10,float v11,float v12,float v13,float v14,float v15) { mat4 m; m.c[0][0] = v0; m.c[0][1] = v1; m.c[0][2] = v2; m.c[0][3] = v3; m.c[1][0] = v4; m.c[1][1] = v5; m.c[1][2] = v6; m.c[1][3] = v7; m.c[2][0] = v8; m.c[2][1] = v9; m.c[2][2] = v10; m.c[2][3] = v11; m.c[3][0] = v12; m.c[3][1] = v13; m.c[3][2] = v14; m.c[3][3] = v15; return m; };
mat2 always_inline make_mat2(vec2 v0,vec2 v1) { mat2 m; m.c[0] = v0; m.c[1] = v1; return m; };
mat3 always_inline make_mat3(vec3 v0,vec3 v1,vec3 v2) { mat3 m; m.c[0] = v0; m.c[1] = v1; m.c[2] = v2; return m; };
mat4 always_inline make_mat4(vec4 v0,vec4 v1,vec4 v2,vec4 v3) { mat4 m; m.c[0] = v0; m.c[1] = v1; m.c[2] = v2; m.c[3] = v3; return m; };
